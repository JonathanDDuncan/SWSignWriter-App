{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Fernando Martinez/Documents/Programacion/SignWriter/Frontend JD/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SignsLookupService } from './signs-lookup.service';\nimport { StorageService } from './storage.service';\nimport { SpmlService } from './spml.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./spml.service\";\nimport * as i2 from \"./storage.service\";\nimport * as i3 from \"./signs-lookup.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@ngx-translate/core\";\nimport * as i6 from \"@angular/common/http\";\nexport class SettingsService {\n  constructor(spmlService, storageService, signsLookupService, toastController, translateService, http) {\n    this.spmlService = spmlService;\n    this.storageService = storageService;\n    this.signsLookupService = signsLookupService;\n    this.toastController = toastController;\n    this.translateService = translateService;\n    this.http = http;\n    this.files = [];\n  }\n\n  loadDefaultPuddles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const puddlesExists = yield _this.storageService.puddlesExists();\n\n      if (!puddlesExists) {\n        const filename = 'assets/spml/' + 'sgn2000.spml';\n        return _this.http.get(filename, {\n          responseType: 'text'\n        }).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (xml) {\n            const saveresult = yield _this.saveSpml(xml);\n            yield _this.presentToast(saveresult);\n            yield _this.signsLookupService.loadSigns();\n            yield _this.storageService.setDefaultPuddleLoaded(true);\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n\n  loadFile(file) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const defaultLoaded = yield _this2.storageService.getDefaultPuddleLoaded();\n\n      if (defaultLoaded) {\n        yield _this2.storageService.removeDefaultPuddles();\n      }\n\n      _this2.readFile(file);\n    })();\n  }\n\n  readFile(file) {\n    var _this3 = this;\n\n    const reader = new FileReader();\n    reader.onload = /*#__PURE__*/_asyncToGenerator(function* () {\n      const xml = reader.result;\n      yield _this3.loadPuddle(xml);\n    });\n    reader.readAsText(file);\n  }\n\n  loadPuddle(xml) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const saveresult = yield _this4.saveSpml(xml);\n      yield _this4.presentToast(saveresult);\n\n      _this4.signsLookupService.loadSigns();\n\n      yield _this4.storageService.setDefaultPuddleLoaded(false);\n    })();\n  }\n\n  saveSpml(spml) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = _this5.spmlService.convertspml(spml);\n\n      const puddlename = 'puddle_' + result.puddleInfo.puddle; // Save spml\n\n      const saveresult = yield _this5.storageService.savePuddle(puddlename, result);\n      return saveresult;\n    })();\n  }\n\n  presentToast(saved) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const toast = yield _this6.toastController.create({\n        message: saved.entries + _this6.translateService.instant('entries saved To') + saved.name,\n        duration: 2000\n      });\n      yield toast.present();\n    })();\n  }\n\n  removeAllSigns() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.storageService.removeAllPuddles();\n\n      _this7.signsLookupService.loadSigns();\n    })();\n  }\n\n  setUILanguage(language) {\n    this.translateService.use(language);\n    this.storageService.saveUILanguage(language);\n  }\n\n  getUILanguage() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this8.storageService.getUILanguage();\n    })();\n  }\n\n  setFirstTime() {\n    this.storageService.saveFirstTime();\n  }\n\n  getFirstTime() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this9.storageService.getFirstTime();\n    })();\n  }\n\n}\n\nSettingsService.ɵfac = function SettingsService_Factory(t) {\n  return new (t || SettingsService)(i0.ɵɵinject(i1.SpmlService), i0.ɵɵinject(i2.StorageService), i0.ɵɵinject(i3.SignsLookupService), i0.ɵɵinject(i4.ToastController), i0.ɵɵinject(i5.TranslateService), i0.ɵɵinject(i6.HttpClient));\n};\n\nSettingsService.ɵprov = i0.ɵɵdefineInjectable({\n  token: SettingsService,\n  factory: SettingsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\Fernando Martinez\\Documents\\Programacion\\SignWriter\\Frontend JD\\src\\app\\settings.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { SignsLookupService } from './signs-lookup.service';\r\nimport { StorageService } from './storage.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { NgxFileDropEntry } from 'ngx-file-drop';\r\nimport { SpmlService, Puddle } from './spml.service';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n\r\n    public files: NgxFileDropEntry[] = [];\r\n  data: string;\r\n\r\n  constructor(private spmlService: SpmlService,\r\n    private storageService: StorageService,\r\n    private signsLookupService: SignsLookupService,\r\n    public toastController: ToastController,\r\n    private translateService: TranslateService,\r\n    private http: HttpClient) { }\r\n\r\n  async loadDefaultPuddles() {\r\n    const puddlesExists = await this.storageService.puddlesExists();\r\n    if (!puddlesExists) {\r\n      const filename = 'assets/spml/' + 'sgn2000.spml';\r\n\r\n      return this.http.get(filename, { responseType: 'text' })\r\n        .subscribe(async xml => {\r\n          const saveresult = await this.saveSpml(xml);\r\n          await this.presentToast(saveresult);\r\n          await this.signsLookupService.loadSigns();\r\n          await this.storageService.setDefaultPuddleLoaded(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  async loadFile(file: File) {\r\n    const defaultLoaded: string = await this.storageService.getDefaultPuddleLoaded();\r\n    if (defaultLoaded) {\r\n      await this.storageService.removeDefaultPuddles();\r\n    }\r\n\r\n    this.readFile(file);\r\n  }\r\n\r\n  private readFile(file: File) {\r\n    const reader = new FileReader();\r\n    reader.onload = (async () => {\r\n      const xml: string | ArrayBuffer = reader.result as string;\r\n      await this.loadPuddle(xml);\r\n    });\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  async loadPuddle(xml: string) {\r\n    const saveresult = await this.saveSpml(xml);\r\n    await this.presentToast(saveresult);\r\n    this.signsLookupService.loadSigns();\r\n    await this.storageService.setDefaultPuddleLoaded(false);\r\n  }\r\n\r\n  async saveSpml(spml: string): Promise<{name: string, puddlename: string, entries: number }> {\r\n    const result: Puddle = this.spmlService.convertspml(spml);\r\n    const puddlename = 'puddle_' + result.puddleInfo.puddle;\r\n\r\n    // Save spml\r\n    const saveresult = await this.storageService.savePuddle(puddlename, result);\r\n    return saveresult;\r\n  }\r\n\r\n  async presentToast(saved: {name: string, puddlename: string, entries: number }) {\r\n    const toast = await this.toastController.create({\r\n      message: saved.entries + this.translateService.instant('entries saved To') + saved.name,\r\n      duration: 2000\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  async removeAllSigns() {\r\n    await this.storageService.removeAllPuddles();\r\n    this.signsLookupService.loadSigns();\r\n  }\r\n\r\n  setUILanguage(language: string) {\r\n    this.translateService.use(language);\r\n    this.storageService.saveUILanguage(language);\r\n  }\r\n  async getUILanguage(): Promise<string> {\r\n    return await this.storageService.getUILanguage();\r\n  }\r\n\r\n  setFirstTime() {\r\n    this.storageService.saveFirstTime();\r\n  }\r\n\r\n  async getFirstTime() {\r\n    return await this.storageService.getFirstTime();\r\n  }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
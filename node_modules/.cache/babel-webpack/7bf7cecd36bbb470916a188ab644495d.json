{"ast":null,"code":"import { __assign, __values } from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\n\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n\n    case 'dom':\n      instrumentDOM();\n      break;\n\n    case 'xhr':\n      instrumentXHR();\n      break;\n\n    case 'fetch':\n      instrumentFetch();\n      break;\n\n    case 'history':\n      instrumentHistory();\n      break;\n\n    case 'error':\n      instrumentError();\n      break;\n\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\n\n\nexport function addInstrumentationHandler(handler) {\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n\n  handlers[handler.type] = handlers[handler.type] || [];\n  handlers[handler.type].push(handler.callback);\n  instrument(handler.type);\n}\n/** JSDoc */\n\nfunction triggerHandlers(type, data) {\n  var e_1, _a;\n\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  try {\n    for (var _b = __values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var handler = _c.value;\n\n      try {\n        handler(data);\n      } catch (e) {\n        logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n}\n/** JSDoc */\n\n\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleLevel) {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        triggerHandlers('console', {\n          args: args,\n          level: level\n        }); // this fails for some browsers. :(\n\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n/** JSDoc */\n\n\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var handlerData = {\n        args: args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args)\n        },\n        startTimestamp: Date.now()\n      };\n      triggerHandlers('fetch', __assign({}, handlerData)); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n      return originalFetch.apply(global, args).then(function (response) {\n        triggerHandlers('fetch', __assign(__assign({}, handlerData), {\n          endTimestamp: Date.now(),\n          response: response\n        }));\n        return response;\n      }, function (error) {\n        triggerHandlers('fetch', __assign(__assign({}, handlerData), {\n          endTimestamp: Date.now(),\n          error: error\n        })); // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n        //       it means the sentry.javascript SDK caught an error invoking your application code.\n        //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n\n        throw error;\n      });\n    };\n  });\n}\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Extract `method` from fetch call arguments */\n\n\nfunction getFetchMethod(fetchArgs) {\n  if (fetchArgs === void 0) {\n    fetchArgs = [];\n  }\n\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n\n  return 'GET';\n}\n/** Extract `url` from fetch call arguments */\n\n\nfunction getFetchUrl(fetchArgs) {\n  if (fetchArgs === void 0) {\n    fetchArgs = [];\n  }\n\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\n\n\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  } // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n\n\n  var requestKeys = [];\n  var requestValues = [];\n  var xhrproto = XMLHttpRequest.prototype;\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      } // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n\n      var xhr = this;\n      var url = args[1];\n      xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1]\n      }; // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n      if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function onreadystatechangeHandler() {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          try {\n            var requestPos = requestKeys.indexOf(xhr);\n\n            if (requestPos !== -1) {\n              // Make sure to pop both key and value to keep it in sync.\n              requestKeys.splice(requestPos);\n              var args_1 = requestValues.splice(requestPos)[0];\n\n              if (xhr.__sentry_xhr__ && args_1[0] !== undefined) {\n                xhr.__sentry_xhr__.body = args_1[0];\n              }\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: xhr\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function () {\n            var readyStateArgs = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              readyStateArgs[_i] = arguments[_i];\n            }\n\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n  fill(xhrproto, 'send', function (originalSend) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      requestKeys.push(this);\n      requestValues.push(args);\n      triggerHandlers('xhr', {\n        args: args,\n        startTimestamp: Date.now(),\n        xhr: this\n      });\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nvar lastHref;\n/** JSDoc */\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n\n  global.onpopstate = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var to = global.location.href; // keep track of the current URL state, as we always receive only the updated state\n\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from: from,\n      to: to\n    });\n\n    if (oldOnPopState) {\n      return oldOnPopState.apply(this, args);\n    }\n  };\n  /** @hidden */\n\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var url = args.length > 2 ? args[2] : undefined;\n\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url); // keep track of the current URL state, as we always receive only the updated state\n\n        lastHref = to;\n        triggerHandlers('history', {\n          from: from,\n          to: to\n        });\n      }\n\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n/** JSDoc */\n\n\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  } // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n  // to the document. Do this before we instrument addEventListener.\n\n\n  global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n  global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false); // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n\n  ['EventTarget', 'Node'].forEach(function (target) {\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    var proto = global[target] && global[target].prototype; // eslint-disable-next-line no-prototype-builtins\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n\n    fill(proto, 'addEventListener', function (original) {\n      return function (eventName, fn, options) {\n        if (fn && fn.handleEvent) {\n          if (eventName === 'click') {\n            fill(fn, 'handleEvent', function (innerOriginal) {\n              return function (event) {\n                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n\n          if (eventName === 'keypress') {\n            fill(fn, 'handleEvent', function (innerOriginal) {\n              return function (event) {\n                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n        } else {\n          if (eventName === 'click') {\n            domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n          }\n\n          if (eventName === 'keypress') {\n            keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n          }\n        }\n\n        return original.call(this, eventName, fn, options);\n      };\n    });\n    fill(proto, 'removeEventListener', function (original) {\n      return function (eventName, fn, options) {\n        try {\n          original.call(this, eventName, fn.__sentry_wrapped__, options);\n        } catch (e) {// ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n\n        return original.call(this, eventName, fn, options);\n      };\n    });\n  });\n}\n\nvar debounceDuration = 1000;\nvar debounceTimer = 0;\nvar keypressTimeout;\nvar lastCapturedEvent;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\n\nfunction domEventHandler(name, handler, debounce) {\n  if (debounce === void 0) {\n    debounce = false;\n  }\n\n  return function (event) {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined; // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(function () {\n        handler({\n          event: event,\n          name: name\n        });\n      });\n    } else {\n      handler({\n        event: event,\n        name: name\n      });\n    }\n  };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\n\n\nfunction keypressEventHandler(handler) {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return function (event) {\n    var target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    var tagName = target && target.tagName; // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n\n    if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable) {\n      return;\n    } // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n\n\n    if (!keypressTimeout) {\n      domEventHandler('input', handler)(event);\n    }\n\n    clearTimeout(keypressTimeout);\n    keypressTimeout = setTimeout(function () {\n      keypressTimeout = undefined;\n    }, debounceDuration);\n  };\n}\n\nvar _oldOnErrorHandler = null;\n/** JSDoc */\n\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column: column,\n      error: error,\n      line: line,\n      msg: msg,\n      url: url\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nvar _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n} //# sourceMappingURL=instrument.js.map","map":{"version":3,"sources":["C:/Users/Fernando Martinez/Documents/Programacion/SignWriter/Frontend JD/node_modules/@sentry/utils/esm/instrument.js"],"names":["__assign","__values","isInstanceOf","isString","logger","getGlobalObject","fill","getFunctionName","supportsHistory","supportsNativeFetch","global","handlers","instrumented","instrument","type","instrumentConsole","instrumentDOM","instrumentXHR","instrumentFetch","instrumentHistory","instrumentError","instrumentUnhandledRejection","warn","addInstrumentationHandler","handler","callback","push","triggerHandlers","data","e_1","_a","_b","_c","next","done","value","e","error","e_1_1","return","call","forEach","level","console","originalConsoleLevel","args","_i","arguments","length","Function","prototype","apply","originalFetch","handlerData","fetchData","method","getFetchMethod","url","getFetchUrl","startTimestamp","Date","now","then","response","endTimestamp","fetchArgs","Request","String","toUpperCase","requestKeys","requestValues","xhrproto","XMLHttpRequest","originalOpen","xhr","__sentry_xhr__","match","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","status","requestPos","indexOf","splice","args_1","undefined","body","onreadystatechange","original","readyStateArgs","addEventListener","originalSend","lastHref","oldOnPopState","onpopstate","to","location","href","from","historyReplacementFunction","originalHistoryFunction","history","document","domEventHandler","bind","keypressEventHandler","target","proto","hasOwnProperty","eventName","fn","options","handleEvent","innerOriginal","event","__sentry_wrapped__","debounceDuration","debounceTimer","keypressTimeout","lastCapturedEvent","name","debounce","clearTimeout","setTimeout","tagName","isContentEditable","_oldOnErrorHandler","onerror","msg","line","column","_oldOnUnhandledRejectionHandler","onunhandledrejection"],"mappings":"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","sourcesContent":["import { __assign, __values } from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        case 'error':\n            instrumentError();\n            break;\n        case 'unhandledrejection':\n            instrumentUnhandledRejection();\n            break;\n        default:\n            logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler) {\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n        return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n}\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = __values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        fill(global.console, level, function (originalConsoleLevel) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleLevel) {\n                    Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supportsNativeFetch()) {\n        return;\n    }\n    fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var handlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', __assign({}, handlerData));\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', __assign(__assign({}, handlerData), { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', __assign(__assign({}, handlerData), { endTimestamp: Date.now(), error: error }));\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n                //       it means the sentry.javascript SDK caught an error invoking your application code.\n                //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n                throw error;\n            });\n        };\n    });\n}\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n    var requestKeys = [];\n    var requestValues = [];\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var url = args[1];\n            xhr.__sentry_xhr__ = {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            };\n            // if Sentry key appears in URL, don't capture it as a request\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n                xhr.__sentry_own_request__ = true;\n            }\n            var onreadystatechangeHandler = function () {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        if (xhr.__sentry_xhr__) {\n                            xhr.__sentry_xhr__.status_code = xhr.status;\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    try {\n                        var requestPos = requestKeys.indexOf(xhr);\n                        if (requestPos !== -1) {\n                            // Make sure to pop both key and value to keep it in sync.\n                            requestKeys.splice(requestPos);\n                            var args_1 = requestValues.splice(requestPos)[0];\n                            if (xhr.__sentry_xhr__ && args_1[0] !== undefined) {\n                                xhr.__sentry_xhr__.body = args_1[0];\n                            }\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', {\n                        args: args,\n                        endTimestamp: Date.now(),\n                        startTimestamp: Date.now(),\n                        xhr: xhr,\n                    });\n                }\n            };\n            if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                fill(xhr, 'onreadystatechange', function (original) {\n                    return function () {\n                        var readyStateArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            readyStateArgs[_i] = arguments[_i];\n                        }\n                        onreadystatechangeHandler();\n                        return original.apply(xhr, readyStateArgs);\n                    };\n                });\n            }\n            else {\n                xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n            }\n            return originalOpen.apply(xhr, args);\n        };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            requestKeys.push(this);\n            requestValues.push(args);\n            triggerHandlers('xhr', {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: this,\n            });\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            return oldOnPopState.apply(this, args);\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n    global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach(function (target) {\n        /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line no-prototype-builtins\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                if (fn && fn.handleEvent) {\n                    if (eventName === 'click') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                    if (eventName === 'keypress') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                }\n                else {\n                    if (eventName === 'click') {\n                        domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n                    }\n                    if (eventName === 'keypress') {\n                        keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n                    }\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    original.call(this, eventName, fn.__sentry_wrapped__, options);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n    });\n}\nvar debounceDuration = 1000;\nvar debounceTimer = 0;\nvar keypressTimeout;\nvar lastCapturedEvent;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name, handler, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(function () {\n                handler({ event: event, name: name });\n            });\n        }\n        else {\n            handler({ event: event, name: name });\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler) {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            domEventHandler('input', handler)(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\nvar _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n    _oldOnErrorHandler = global.onerror;\n    global.onerror = function (msg, url, line, column, error) {\n        triggerHandlers('error', {\n            column: column,\n            error: error,\n            line: line,\n            msg: msg,\n            url: url,\n        });\n        if (_oldOnErrorHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnErrorHandler.apply(this, arguments);\n        }\n        return false;\n    };\n}\nvar _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n    _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n    global.onunhandledrejection = function (e) {\n        triggerHandlers('unhandledrejection', e);\n        if (_oldOnUnhandledRejectionHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n    };\n}\n//# sourceMappingURL=instrument.js.map"]},"metadata":{},"sourceType":"module"}
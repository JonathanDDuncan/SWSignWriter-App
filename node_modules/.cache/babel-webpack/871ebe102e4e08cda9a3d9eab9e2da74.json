{"ast":null,"code":"import { __assign, __read, __spread } from \"tslib\";\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\n\nvar Scope =\n/** @class */\nfunction () {\n  function Scope() {\n    /** Flag if notifiying is happening. */\n    this._notifyingListeners = false;\n    /** Callback for client to receive scope changes. */\n\n    this._scopeListeners = [];\n    /** Callback list that will be called after {@link applyToEvent}. */\n\n    this._eventProcessors = [];\n    /** Array of breadcrumbs. */\n\n    this._breadcrumbs = [];\n    /** User */\n\n    this._user = {};\n    /** Tags */\n\n    this._tags = {};\n    /** Extra */\n\n    this._extra = {};\n    /** Contexts */\n\n    this._contexts = {};\n  }\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n\n\n  Scope.clone = function (scope) {\n    var newScope = new Scope();\n\n    if (scope) {\n      newScope._breadcrumbs = __spread(scope._breadcrumbs);\n      newScope._tags = __assign({}, scope._tags);\n      newScope._extra = __assign({}, scope._extra);\n      newScope._contexts = __assign({}, scope._contexts);\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = __spread(scope._eventProcessors);\n    }\n\n    return newScope;\n  };\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n\n\n  Scope.prototype.addScopeListener = function (callback) {\n    this._scopeListeners.push(callback);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.addEventProcessor = function (callback) {\n    this._eventProcessors.push(callback);\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setUser = function (user) {\n    this._user = user || {};\n\n    if (this._session) {\n      this._session.update({\n        user: user\n      });\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.getUser = function () {\n    return this._user;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setTags = function (tags) {\n    this._tags = __assign(__assign({}, this._tags), tags);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setTag = function (key, value) {\n    var _a;\n\n    this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setExtras = function (extras) {\n    this._extra = __assign(__assign({}, this._extra), extras);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setExtra = function (key, extra) {\n    var _a;\n\n    this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setFingerprint = function (fingerprint) {\n    this._fingerprint = fingerprint;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setLevel = function (level) {\n    this._level = level;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setTransactionName = function (name) {\n    this._transactionName = name;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n\n\n  Scope.prototype.setTransaction = function (name) {\n    return this.setTransactionName(name);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setContext = function (key, context) {\n    var _a;\n\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setSpan = function (span) {\n    this._span = span;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.getSpan = function () {\n    return this._span;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.getTransaction = function () {\n    var _a, _b, _c, _d; // often, this span will be a transaction, but it's not guaranteed to be\n\n\n    var span = this.getSpan(); // try it the new way first\n\n    if ((_a = span) === null || _a === void 0 ? void 0 : _a.transaction) {\n      return (_b = span) === null || _b === void 0 ? void 0 : _b.transaction;\n    } // fallback to the old way (known bug: this only finds transactions with sampled = true)\n\n\n    if ((_d = (_c = span) === null || _c === void 0 ? void 0 : _c.spanRecorder) === null || _d === void 0 ? void 0 : _d.spans[0]) {\n      return span.spanRecorder.spans[0];\n    } // neither way found a transaction\n\n\n    return undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setSession = function (session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.getSession = function () {\n    return this._session;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.update = function (captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = captureContext(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n      this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n      this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext;\n      this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n      this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n      this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n    }\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.clear = function () {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._session = undefined;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n    var mergedBreadcrumb = __assign({\n      timestamp: dateTimestampInSeconds()\n    }, breadcrumb);\n\n    this._breadcrumbs = maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0 ? __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs) : __spread(this._breadcrumbs, [mergedBreadcrumb]);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.clearBreadcrumbs = function () {\n    this._breadcrumbs = [];\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n\n\n  Scope.prototype.applyToEvent = function (event, hint) {\n    var _a;\n\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = __assign(__assign({}, this._extra), event.extra);\n    }\n\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = __assign(__assign({}, this._tags), event.tags);\n    }\n\n    if (this._user && Object.keys(this._user).length) {\n      event.user = __assign(__assign({}, this._user), event.user);\n    }\n\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n    }\n\n    if (this._level) {\n      event.level = this._level;\n    }\n\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    } // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relys on that.\n\n\n    if (this._span) {\n      event.contexts = __assign({\n        trace: this._span.getTraceContext()\n      }, event.contexts);\n      var transactionName = (_a = this._span.transaction) === null || _a === void 0 ? void 0 : _a.name;\n\n      if (transactionName) {\n        event.tags = __assign({\n          transaction: transactionName\n        }, event.tags);\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = __spread(event.breadcrumbs || [], this._breadcrumbs);\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n    return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n  };\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n\n\n  Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n    var _this = this;\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    return new SyncPromise(function (resolve, reject) {\n      var processor = processors[index];\n\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor(__assign({}, event), hint);\n\n        if (isThenable(result)) {\n          result.then(function (final) {\n            return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve);\n          }).then(null, reject);\n        } else {\n          _this._notifyEventProcessors(processors, result, hint, index + 1).then(resolve).then(null, reject);\n        }\n      }\n    });\n  };\n  /**\n   * This will be called on every set call.\n   */\n\n\n  Scope.prototype._notifyScopeListeners = function () {\n    var _this = this; // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n\n\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n\n      this._scopeListeners.forEach(function (callback) {\n        callback(_this);\n      });\n\n      this._notifyingListeners = false;\n    }\n  };\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n\n\n  Scope.prototype._applyFingerprint = function (event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? Array.isArray(event.fingerprint) ? event.fingerprint : [event.fingerprint] : []; // If we have something on the scope, then merge it with event\n\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    } // If we have no data at all, remove empty array default\n\n\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  };\n\n  return Scope;\n}();\n\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\n\nfunction getGlobalEventProcessors() {\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n  var global = getGlobalObject();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\n\n\nexport function addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n} //# sourceMappingURL=scope.js.map","map":{"version":3,"sources":["C:/Users/Fernando Martinez/Documents/Programacion/SignWriter/Frontend JD/node_modules/@sentry/hub/esm/scope.js"],"names":["__assign","__read","__spread","dateTimestampInSeconds","getGlobalObject","isPlainObject","isThenable","SyncPromise","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","clone","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","prototype","addScopeListener","callback","push","addEventProcessor","setUser","user","update","_notifyScopeListeners","getUser","setTags","tags","setTag","key","value","_a","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","level","setTransactionName","name","setTransaction","setContext","context","setSpan","span","getSpan","getTransaction","_b","_c","_d","transaction","spanRecorder","spans","undefined","setSession","session","getSession","captureContext","updatedScope","Object","keys","length","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","slice","clearBreadcrumbs","applyToEvent","event","hint","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","processors","index","_this","resolve","reject","processor","result","then","final","forEach","Array","isArray","concat","global","__SENTRY__","globalEventProcessors","addGlobalEventProcessor"],"mappings":"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","sourcesContent":["import { __assign, __read, __spread } from \"tslib\";\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._contexts = {};\n    }\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = __spread(scope._breadcrumbs);\n            newScope._tags = __assign({}, scope._tags);\n            newScope._extra = __assign({}, scope._extra);\n            newScope._contexts = __assign({}, scope._contexts);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._session = scope._session;\n            newScope._transactionName = scope._transactionName;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = __spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        if (this._session) {\n            this._session.update({ user: user });\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getUser = function () {\n        return this._user;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = __assign(__assign({}, this._tags), tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = __assign(__assign({}, this._extra), extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransactionName = function (name) {\n        this._transactionName = name;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Can be removed in major version.\n     * @deprecated in favor of {@link this.setTransactionName}\n     */\n    Scope.prototype.setTransaction = function (name) {\n        return this.setTransactionName(name);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        if (context === null) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this._contexts[key];\n        }\n        else {\n            this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getTransaction = function () {\n        var _a, _b, _c, _d;\n        // often, this span will be a transaction, but it's not guaranteed to be\n        var span = this.getSpan();\n        // try it the new way first\n        if ((_a = span) === null || _a === void 0 ? void 0 : _a.transaction) {\n            return (_b = span) === null || _b === void 0 ? void 0 : _b.transaction;\n        }\n        // fallback to the old way (known bug: this only finds transactions with sampled = true)\n        if ((_d = (_c = span) === null || _c === void 0 ? void 0 : _c.spanRecorder) === null || _d === void 0 ? void 0 : _d.spans[0]) {\n            return span.spanRecorder.spans[0];\n        }\n        // neither way found a transaction\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSession = function (session) {\n        if (!session) {\n            delete this._session;\n        }\n        else {\n            this._session = session;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSession = function () {\n        return this._session;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.update = function (captureContext) {\n        if (!captureContext) {\n            return this;\n        }\n        if (typeof captureContext === 'function') {\n            var updatedScope = captureContext(this);\n            return updatedScope instanceof Scope ? updatedScope : this;\n        }\n        if (captureContext instanceof Scope) {\n            this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n            if (captureContext._user && Object.keys(captureContext._user).length) {\n                this._user = captureContext._user;\n            }\n            if (captureContext._level) {\n                this._level = captureContext._level;\n            }\n            if (captureContext._fingerprint) {\n                this._fingerprint = captureContext._fingerprint;\n            }\n        }\n        else if (isPlainObject(captureContext)) {\n            // eslint-disable-next-line no-param-reassign\n            captureContext = captureContext;\n            this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n            if (captureContext.user) {\n                this._user = captureContext.user;\n            }\n            if (captureContext.level) {\n                this._level = captureContext.level;\n            }\n            if (captureContext.fingerprint) {\n                this._fingerprint = captureContext.fingerprint;\n            }\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._contexts = {};\n        this._level = undefined;\n        this._transactionName = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._session = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var mergedBreadcrumb = __assign({ timestamp: dateTimestampInSeconds() }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs)\n                : __spread(this._breadcrumbs, [mergedBreadcrumb]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        var _a;\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = __assign(__assign({}, this._extra), event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = __assign(__assign({}, this._tags), event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = __assign(__assign({}, this._user), event.user);\n        }\n        if (this._contexts && Object.keys(this._contexts).length) {\n            event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transactionName) {\n            event.transaction = this._transactionName;\n        }\n        // We want to set the trace context for normal events only if there isn't already\n        // a trace context on the event. There is a product feature in place where we link\n        // errors with transaction and it relys on that.\n        if (this._span) {\n            event.contexts = __assign({ trace: this._span.getTraceContext() }, event.contexts);\n            var transactionName = (_a = this._span.transaction) === null || _a === void 0 ? void 0 : _a.name;\n            if (transactionName) {\n                event.tags = __assign({ transaction: transactionName }, event.tags);\n            }\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = __spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        // We need this check for this._notifyingListeners to be able to work on scope during updates\n        // If this check is not here we'll produce endless recursion when something is done with the scope\n        // during the callback.\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            this._scopeListeners.forEach(function (callback) {\n                callback(_this);\n            });\n            this._notifyingListeners = false;\n        }\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n    /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map"]},"metadata":{},"sourceType":"module"}
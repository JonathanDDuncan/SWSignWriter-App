{"ast":null,"code":"'use strict';\n\nvar asn1 = require('asn1.js');\n\nvar b64ToBn = require('./b64-to-bn');\n\nvar PublicKeyInfo = require('./asn1/public-key-info'),\n    PrivateKeyInfo = require('./asn1/private-key-info'),\n    Version = require('./asn1/version');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey',\n/* @this */\nfunction () {\n  this.seq().obj(this.key('version').use(Version), this.key('modulus').int(), this.key('publicExponent').int(), this.key('privateExponent').int(), this.key('prime1').int(), this.key('prime2').int(), this.key('exponent1').int(), this.key('exponent2').int(), this.key('coefficient').int());\n});\nvar RSAPublicKey = asn1.define('RSAPublicKey',\n/* @this */\nfunction () {\n  this.seq().obj(this.key('modulus').int(), this.key('publicExponent').int());\n});\nvar algorithm = {\n  algorithm: [1, 2, 840, 113549, 1, 1, 1],\n  parameters: [5, 0]\n};\n\nfunction rsaJwkToBuffer(jwk, opts) {\n  if ('string' !== typeof jwk.e) {\n    throw new TypeError('Expected \"jwk.e\" to be a String');\n  }\n\n  if ('string' !== typeof jwk.n) {\n    throw new TypeError('Expected \"jwk.n\" to be a String');\n  }\n\n  if (opts.private) {\n    if ('string' !== typeof jwk.d) {\n      throw new TypeError('Expected \"jwk.d\" to be a String');\n    }\n\n    if ('string' !== typeof jwk.p) {\n      throw new TypeError('Expected \"jwk.p\" to be a String');\n    }\n\n    if ('string' !== typeof jwk.q) {\n      throw new TypeError('Expected \"jwk.q\" to be a String');\n    }\n\n    if ('string' !== typeof jwk.dp) {\n      throw new TypeError('Expected \"jwk.dp\" to be a String');\n    }\n\n    if ('string' !== typeof jwk.dq) {\n      throw new TypeError('Expected \"jwk.dq\" to be a String');\n    }\n\n    if ('string' !== typeof jwk.qi) {\n      throw new TypeError('Expected \"jwk.qi\" to be a String');\n    }\n  }\n\n  var pem;\n\n  if (opts.private) {\n    pem = PrivateKeyInfo.encode({\n      version: 0,\n      privateKeyAlgorithm: algorithm,\n      privateKey: RSAPrivateKey.encode({\n        version: 0,\n        modulus: b64ToBn(jwk.n, false),\n        publicExponent: b64ToBn(jwk.e, false),\n        privateExponent: b64ToBn(jwk.d, true),\n        prime1: b64ToBn(jwk.p, true),\n        prime2: b64ToBn(jwk.q, true),\n        exponent1: b64ToBn(jwk.dp, true),\n        exponent2: b64ToBn(jwk.dq, true),\n        coefficient: b64ToBn(jwk.qi, true)\n      }, 'der')\n    }, 'pem', {\n      label: 'PRIVATE KEY'\n    });\n  } else {\n    pem = PublicKeyInfo.encode({\n      algorithm: algorithm,\n      PublicKey: {\n        unused: 0,\n        data: RSAPublicKey.encode({\n          modulus: b64ToBn(jwk.n, false),\n          publicExponent: b64ToBn(jwk.e, false)\n        }, 'der')\n      }\n    }, 'pem', {\n      label: 'PUBLIC KEY'\n    });\n  } // This is in an if incase asn1.js adds a trailing \\n\n  // istanbul ignore else\n\n\n  if ('\\n' !== pem.slice(-1)) {\n    pem += '\\n';\n  }\n\n  return pem;\n}\n\nmodule.exports = rsaJwkToBuffer;","map":{"version":3,"sources":["C:/Users/Fernando Martinez/Documents/Programacion/SignWriter/Frontend JD/node_modules/jwk-to-pem/src/rsa.js"],"names":["asn1","require","b64ToBn","PublicKeyInfo","PrivateKeyInfo","Version","RSAPrivateKey","define","seq","obj","key","use","int","RSAPublicKey","algorithm","parameters","rsaJwkToBuffer","jwk","opts","e","TypeError","n","private","d","p","q","dp","dq","qi","pem","encode","version","privateKeyAlgorithm","privateKey","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","label","PublicKey","unused","data","slice","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAArB;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,wBAAD,CAA3B;AAAA,IACCG,cAAc,GAAGH,OAAO,CAAC,yBAAD,CADzB;AAAA,IAECI,OAAO,GAAGJ,OAAO,CAAC,gBAAD,CAFlB;;AAIA,IAAIK,aAAa,GAAGN,IAAI,CAACO,MAAL,CAAY,eAAZ;AAA6B;AAAY,YAAW;AACvE,OAAKC,GAAL,GAAWC,GAAX,CACC,KAAKC,GAAL,CAAS,SAAT,EAAoBC,GAApB,CAAwBN,OAAxB,CADD,EAEC,KAAKK,GAAL,CAAS,SAAT,EAAoBE,GAApB,EAFD,EAGC,KAAKF,GAAL,CAAS,gBAAT,EAA2BE,GAA3B,EAHD,EAIC,KAAKF,GAAL,CAAS,iBAAT,EAA4BE,GAA5B,EAJD,EAKC,KAAKF,GAAL,CAAS,QAAT,EAAmBE,GAAnB,EALD,EAMC,KAAKF,GAAL,CAAS,QAAT,EAAmBE,GAAnB,EAND,EAOC,KAAKF,GAAL,CAAS,WAAT,EAAsBE,GAAtB,EAPD,EAQC,KAAKF,GAAL,CAAS,WAAT,EAAsBE,GAAtB,EARD,EASC,KAAKF,GAAL,CAAS,aAAT,EAAwBE,GAAxB,EATD;AAWA,CAZmB,CAApB;AAcA,IAAIC,YAAY,GAAGb,IAAI,CAACO,MAAL,CAAY,cAAZ;AAA4B;AAAY,YAAW;AACrE,OAAKC,GAAL,GAAWC,GAAX,CACC,KAAKC,GAAL,CAAS,SAAT,EAAoBE,GAApB,EADD,EAEC,KAAKF,GAAL,CAAS,gBAAT,EAA2BE,GAA3B,EAFD;AAIA,CALkB,CAAnB;AAOA,IAAIE,SAAS,GAAG;AACfA,EAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,MAAZ,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CADI;AAEfC,EAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFG,CAAhB;;AAKA,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AAClC,MAAI,aAAa,OAAOD,GAAG,CAACE,CAA5B,EAA+B;AAC9B,UAAM,IAAIC,SAAJ,CAAc,iCAAd,CAAN;AACA;;AAED,MAAI,aAAa,OAAOH,GAAG,CAACI,CAA5B,EAA+B;AAC9B,UAAM,IAAID,SAAJ,CAAc,iCAAd,CAAN;AACA;;AAED,MAAIF,IAAI,CAACI,OAAT,EAAkB;AACjB,QAAI,aAAa,OAAOL,GAAG,CAACM,CAA5B,EAA+B;AAC9B,YAAM,IAAIH,SAAJ,CAAc,iCAAd,CAAN;AACA;;AAED,QAAI,aAAa,OAAOH,GAAG,CAACO,CAA5B,EAA+B;AAC9B,YAAM,IAAIJ,SAAJ,CAAc,iCAAd,CAAN;AACA;;AAED,QAAI,aAAa,OAAOH,GAAG,CAACQ,CAA5B,EAA+B;AAC9B,YAAM,IAAIL,SAAJ,CAAc,iCAAd,CAAN;AACA;;AAED,QAAI,aAAa,OAAOH,GAAG,CAACS,EAA5B,EAAgC;AAC/B,YAAM,IAAIN,SAAJ,CAAc,kCAAd,CAAN;AACA;;AAED,QAAI,aAAa,OAAOH,GAAG,CAACU,EAA5B,EAAgC;AAC/B,YAAM,IAAIP,SAAJ,CAAc,kCAAd,CAAN;AACA;;AAED,QAAI,aAAa,OAAOH,GAAG,CAACW,EAA5B,EAAgC;AAC/B,YAAM,IAAIR,SAAJ,CAAc,kCAAd,CAAN;AACA;AACD;;AAED,MAAIS,GAAJ;;AACA,MAAIX,IAAI,CAACI,OAAT,EAAkB;AACjBO,IAAAA,GAAG,GAAGzB,cAAc,CAAC0B,MAAf,CAAsB;AAC3BC,MAAAA,OAAO,EAAE,CADkB;AAE3BC,MAAAA,mBAAmB,EAAElB,SAFM;AAG3BmB,MAAAA,UAAU,EAAE3B,aAAa,CAACwB,MAAd,CAAqB;AAChCC,QAAAA,OAAO,EAAE,CADuB;AAEhCG,QAAAA,OAAO,EAAEhC,OAAO,CAACe,GAAG,CAACI,CAAL,EAAQ,KAAR,CAFgB;AAGhCc,QAAAA,cAAc,EAAEjC,OAAO,CAACe,GAAG,CAACE,CAAL,EAAQ,KAAR,CAHS;AAIhCiB,QAAAA,eAAe,EAAElC,OAAO,CAACe,GAAG,CAACM,CAAL,EAAQ,IAAR,CAJQ;AAKhCc,QAAAA,MAAM,EAAEnC,OAAO,CAACe,GAAG,CAACO,CAAL,EAAQ,IAAR,CALiB;AAMhCc,QAAAA,MAAM,EAAEpC,OAAO,CAACe,GAAG,CAACQ,CAAL,EAAQ,IAAR,CANiB;AAOhCc,QAAAA,SAAS,EAAErC,OAAO,CAACe,GAAG,CAACS,EAAL,EAAS,IAAT,CAPc;AAQhCc,QAAAA,SAAS,EAAEtC,OAAO,CAACe,GAAG,CAACU,EAAL,EAAS,IAAT,CARc;AAShCc,QAAAA,WAAW,EAAEvC,OAAO,CAACe,GAAG,CAACW,EAAL,EAAS,IAAT;AATY,OAArB,EAUT,KAVS;AAHe,KAAtB,EAcH,KAdG,EAcI;AACTc,MAAAA,KAAK,EAAE;AADE,KAdJ,CAAN;AAiBA,GAlBD,MAkBO;AACNb,IAAAA,GAAG,GAAG1B,aAAa,CAAC2B,MAAd,CAAqB;AAC1BhB,MAAAA,SAAS,EAAEA,SADe;AAE1B6B,MAAAA,SAAS,EAAE;AACVC,QAAAA,MAAM,EAAE,CADE;AAEVC,QAAAA,IAAI,EAAEhC,YAAY,CAACiB,MAAb,CAAoB;AACzBI,UAAAA,OAAO,EAAEhC,OAAO,CAACe,GAAG,CAACI,CAAL,EAAQ,KAAR,CADS;AAEzBc,UAAAA,cAAc,EAAEjC,OAAO,CAACe,GAAG,CAACE,CAAL,EAAQ,KAAR;AAFE,SAApB,EAGH,KAHG;AAFI;AAFe,KAArB,EASH,KATG,EASI;AACTuB,MAAAA,KAAK,EAAE;AADE,KATJ,CAAN;AAYA,GAnEiC,CAqElC;AACA;;;AACA,MAAI,SAASb,GAAG,CAACiB,KAAJ,CAAU,CAAC,CAAX,CAAb,EAA4B;AAC3BjB,IAAAA,GAAG,IAAI,IAAP;AACA;;AAED,SAAOA,GAAP;AACA;;AAEDkB,MAAM,CAACC,OAAP,GAAiBhC,cAAjB","sourcesContent":["'use strict';\n\nvar asn1 = require('asn1.js');\n\nvar b64ToBn = require('./b64-to-bn');\n\nvar PublicKeyInfo = require('./asn1/public-key-info'),\n\tPrivateKeyInfo = require('./asn1/private-key-info'),\n\tVersion = require('./asn1/version');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', /* @this */ function() {\n\tthis.seq().obj(\n\t\tthis.key('version').use(Version),\n\t\tthis.key('modulus').int(),\n\t\tthis.key('publicExponent').int(),\n\t\tthis.key('privateExponent').int(),\n\t\tthis.key('prime1').int(),\n\t\tthis.key('prime2').int(),\n\t\tthis.key('exponent1').int(),\n\t\tthis.key('exponent2').int(),\n\t\tthis.key('coefficient').int()\n\t);\n});\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', /* @this */ function() {\n\tthis.seq().obj(\n\t\tthis.key('modulus').int(),\n\t\tthis.key('publicExponent').int()\n\t);\n});\n\nvar algorithm = {\n\talgorithm: [1, 2, 840, 113549, 1, 1, 1],\n\tparameters: [5, 0]\n};\n\nfunction rsaJwkToBuffer(jwk, opts) {\n\tif ('string' !== typeof jwk.e) {\n\t\tthrow new TypeError('Expected \"jwk.e\" to be a String');\n\t}\n\n\tif ('string' !== typeof jwk.n) {\n\t\tthrow new TypeError('Expected \"jwk.n\" to be a String');\n\t}\n\n\tif (opts.private) {\n\t\tif ('string' !== typeof jwk.d) {\n\t\t\tthrow new TypeError('Expected \"jwk.d\" to be a String');\n\t\t}\n\n\t\tif ('string' !== typeof jwk.p) {\n\t\t\tthrow new TypeError('Expected \"jwk.p\" to be a String');\n\t\t}\n\n\t\tif ('string' !== typeof jwk.q) {\n\t\t\tthrow new TypeError('Expected \"jwk.q\" to be a String');\n\t\t}\n\n\t\tif ('string' !== typeof jwk.dp) {\n\t\t\tthrow new TypeError('Expected \"jwk.dp\" to be a String');\n\t\t}\n\n\t\tif ('string' !== typeof jwk.dq) {\n\t\t\tthrow new TypeError('Expected \"jwk.dq\" to be a String');\n\t\t}\n\n\t\tif ('string' !== typeof jwk.qi) {\n\t\t\tthrow new TypeError('Expected \"jwk.qi\" to be a String');\n\t\t}\n\t}\n\n\tvar pem;\n\tif (opts.private) {\n\t\tpem = PrivateKeyInfo.encode({\n\t\t\tversion: 0,\n\t\t\tprivateKeyAlgorithm: algorithm,\n\t\t\tprivateKey: RSAPrivateKey.encode({\n\t\t\t\tversion: 0,\n\t\t\t\tmodulus: b64ToBn(jwk.n, false),\n\t\t\t\tpublicExponent: b64ToBn(jwk.e, false),\n\t\t\t\tprivateExponent: b64ToBn(jwk.d, true),\n\t\t\t\tprime1: b64ToBn(jwk.p, true),\n\t\t\t\tprime2: b64ToBn(jwk.q, true),\n\t\t\t\texponent1: b64ToBn(jwk.dp, true),\n\t\t\t\texponent2: b64ToBn(jwk.dq, true),\n\t\t\t\tcoefficient: b64ToBn(jwk.qi, true)\n\t\t\t}, 'der')\n\t\t}, 'pem', {\n\t\t\tlabel: 'PRIVATE KEY'\n\t\t});\n\t} else {\n\t\tpem = PublicKeyInfo.encode({\n\t\t\talgorithm: algorithm,\n\t\t\tPublicKey: {\n\t\t\t\tunused: 0,\n\t\t\t\tdata: RSAPublicKey.encode({\n\t\t\t\t\tmodulus: b64ToBn(jwk.n, false),\n\t\t\t\t\tpublicExponent: b64ToBn(jwk.e, false)\n\t\t\t\t}, 'der')\n\t\t\t}\n\t\t}, 'pem', {\n\t\t\tlabel: 'PUBLIC KEY'\n\t\t});\n\t}\n\n\t// This is in an if incase asn1.js adds a trailing \\n\n\t// istanbul ignore else\n\tif ('\\n' !== pem.slice(-1)) {\n\t\tpem += '\\n';\n\t}\n\n\treturn pem;\n}\n\nmodule.exports = rsaJwkToBuffer;\n"]},"metadata":{},"sourceType":"script"}
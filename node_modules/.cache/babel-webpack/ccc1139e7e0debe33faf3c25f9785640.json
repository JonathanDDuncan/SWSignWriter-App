{"ast":null,"code":"import { SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\n\nvar Session =\n/** @class */\nfunction () {\n  function Session(context) {\n    this.errors = 0;\n    this.sid = uuid4();\n    this.timestamp = Date.now();\n    this.started = Date.now();\n    this.duration = 0;\n    this.status = SessionStatus.Ok;\n\n    if (context) {\n      this.update(context);\n    }\n  }\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n\n\n  Session.prototype.update = function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || Date.now();\n\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n\n    if (context.did) {\n      this.did = \"\" + context.did;\n    }\n\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n\n    if (context.release) {\n      this.release = context.release;\n    }\n\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n\n    if (context.status) {\n      this.status = context.status;\n    }\n  };\n  /** JSDoc */\n\n\n  Session.prototype.close = function (status) {\n    if (status) {\n      this.update({\n        status: status\n      });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({\n        status: SessionStatus.Exited\n      });\n    } else {\n      this.update();\n    }\n  };\n  /** JSDoc */\n\n\n  Session.prototype.toJSON = function () {\n    return dropUndefinedKeys({\n      sid: \"\" + this.sid,\n      init: true,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent\n      })\n    });\n  };\n\n  return Session;\n}();\n\nexport { Session }; //# sourceMappingURL=session.js.map","map":{"version":3,"sources":["C:/Users/Fernando Martinez/Documents/Programacion/SignWriter/Frontend JD/node_modules/@sentry/hub/esm/session.js"],"names":["SessionStatus","dropUndefinedKeys","uuid4","Session","context","errors","sid","timestamp","Date","now","started","duration","status","Ok","update","prototype","user","ip_address","ipAddress","did","id","email","username","length","release","environment","userAgent","close","Exited","toJSON","init","toISOString","undefined","attrs","user_agent"],"mappings":"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","sourcesContent":["import { SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\nvar Session = /** @class */ (function () {\n    function Session(context) {\n        this.errors = 0;\n        this.sid = uuid4();\n        this.timestamp = Date.now();\n        this.started = Date.now();\n        this.duration = 0;\n        this.status = SessionStatus.Ok;\n        if (context) {\n            this.update(context);\n        }\n    }\n    /** JSDoc */\n    // eslint-disable-next-line complexity\n    Session.prototype.update = function (context) {\n        if (context === void 0) { context = {}; }\n        if (context.user) {\n            if (context.user.ip_address) {\n                this.ipAddress = context.user.ip_address;\n            }\n            if (!context.did) {\n                this.did = context.user.id || context.user.email || context.user.username;\n            }\n        }\n        this.timestamp = context.timestamp || Date.now();\n        if (context.sid) {\n            // Good enough uuid validation. — Kamil\n            this.sid = context.sid.length === 32 ? context.sid : uuid4();\n        }\n        if (context.did) {\n            this.did = \"\" + context.did;\n        }\n        if (typeof context.started === 'number') {\n            this.started = context.started;\n        }\n        if (typeof context.duration === 'number') {\n            this.duration = context.duration;\n        }\n        else {\n            this.duration = this.timestamp - this.started;\n        }\n        if (context.release) {\n            this.release = context.release;\n        }\n        if (context.environment) {\n            this.environment = context.environment;\n        }\n        if (context.ipAddress) {\n            this.ipAddress = context.ipAddress;\n        }\n        if (context.userAgent) {\n            this.userAgent = context.userAgent;\n        }\n        if (typeof context.errors === 'number') {\n            this.errors = context.errors;\n        }\n        if (context.status) {\n            this.status = context.status;\n        }\n    };\n    /** JSDoc */\n    Session.prototype.close = function (status) {\n        if (status) {\n            this.update({ status: status });\n        }\n        else if (this.status === SessionStatus.Ok) {\n            this.update({ status: SessionStatus.Exited });\n        }\n        else {\n            this.update();\n        }\n    };\n    /** JSDoc */\n    Session.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            sid: \"\" + this.sid,\n            init: true,\n            started: new Date(this.started).toISOString(),\n            timestamp: new Date(this.timestamp).toISOString(),\n            status: this.status,\n            errors: this.errors,\n            did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n            duration: this.duration,\n            attrs: dropUndefinedKeys({\n                release: this.release,\n                environment: this.environment,\n                ip_address: this.ipAddress,\n                user_agent: this.userAgent,\n            }),\n        });\n    };\n    return Session;\n}());\nexport { Session };\n//# sourceMappingURL=session.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { isNodeEnv } from './node';\nimport { snipLine } from './string';\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n\nexport function getGlobalObject() {\n  return isNodeEnv() ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : fallbackGlobalObject;\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\n\nexport function uuid4() {\n  var global = getGlobalObject();\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr); // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n\n    arr[3] = arr[3] & 0xfff | 0x4000; // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n\n    arr[4] = arr[4] & 0x3fff | 0x8000;\n\n    var pad = function pad(num) {\n      var v = num.toString(16);\n\n      while (v.length < 4) {\n        v = \"0\" + v;\n      }\n\n      return v;\n    };\n\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n  } // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n\n\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    // eslint-disable-next-line no-bitwise\n    var r = Math.random() * 16 | 0; // eslint-disable-next-line no-bitwise\n\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\n\nexport function parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  } // coerce to undefined values to empty string so we don't get 'undefined'\n\n\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment\n  };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\n\nexport function getEventDescription(event) {\n  if (event.message) {\n    return event.message;\n  }\n\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    var exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return exception.type + \": \" + exception.value;\n    }\n\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n\n  return event.event_id || '<unknown>';\n}\n/** JSDoc */\n\nexport function consoleSandbox(callback) {\n  var global = getGlobalObject();\n  var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  } // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n  var originalConsole = global.console;\n  var wrappedLevels = {}; // Restore all wrapped console methods\n\n  levels.forEach(function (level) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in global.console && originalConsole[level].__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level];\n      originalConsole[level] = originalConsole[level].__sentry_original__;\n    }\n  }); // Perform callback manipulations\n\n  var result = callback(); // Revert restoration to wrapped state\n\n  Object.keys(wrappedLevels).forEach(function (level) {\n    originalConsole[level] = wrappedLevels[level];\n  });\n  return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\n\nexport function addExceptionTypeValue(event, value, type) {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\n\nexport function addExceptionMechanism(event, mechanism) {\n  if (mechanism === void 0) {\n    mechanism = {};\n  } // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n\n\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n    Object.keys(mechanism).forEach(function (key) {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {// no-empty\n  }\n}\n/**\n * A safe form of location.href\n */\n\nexport function getLocationHref() {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n} // https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\n\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\n\nexport function parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4]\n  };\n}\nvar defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\n\nexport function parseRetryAfterHeader(now, header) {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  var headerDelay = parseInt(\"\" + header, 10);\n\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(\"\" + header);\n\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\n\nexport function addContextToFrame(lines, frame, linesOfContext) {\n  if (linesOfContext === void 0) {\n    linesOfContext = 5;\n  }\n\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n  frame.pre_context = lines.slice(Math.max(0, sourceLine - linesOfContext), sourceLine).map(function (line) {\n    return snipLine(line, 0);\n  });\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n  frame.post_context = lines.slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext).map(function (line) {\n    return snipLine(line, 0);\n  });\n}\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\n\nexport function stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n} //# sourceMappingURL=misc.js.map","map":{"version":3,"sources":["C:/Users/Fernando Martinez/Documents/Programacion/SignWriter/Frontend JD/node_modules/@sentry/utils/esm/misc.js"],"names":["isNodeEnv","snipLine","fallbackGlobalObject","getGlobalObject","global","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","toString","length","replace","c","r","Math","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getEventDescription","event","message","exception","values","type","value","event_id","consoleSandbox","callback","levels","originalConsole","console","wrappedLevels","forEach","level","__sentry_original__","result","Object","keys","addExceptionTypeValue","addExceptionMechanism","mechanism","key","_oO","getLocationHref","document","location","href","oO","SEMVER_REGEXP","parseSemver","input","major","parseInt","minor","patch","buildmetadata","isNaN","undefined","prerelease","defaultRetryAfter","parseRetryAfterHeader","now","header","headerDelay","headerDate","Date","parse","addContextToFrame","lines","frame","linesOfContext","lineno","maxLines","sourceLine","max","min","pre_context","slice","map","line","context_line","colno","post_context","stripUrlQueryAndFragment","urlPath","split"],"mappings":"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","sourcesContent":["import { isNodeEnv } from './node';\nimport { snipLine } from './string';\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // eslint-disable-next-line no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // eslint-disable-next-line no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // eslint-disable-next-line no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (level in global.console && originalConsole[level].__sentry_original__) {\n            wrappedLevels[level] = originalConsole[level];\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(event, mechanism) {\n    if (mechanism === void 0) { mechanism = {}; }\n    // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n    try {\n        // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n        Object.keys(mechanism).forEach(function (key) {\n            // @ts-ignore Mechanism has no index signature\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            event.exception.values[0].mechanism[key] = mechanism[key];\n        });\n    }\n    catch (_oO) {\n        // no-empty\n    }\n}\n/**\n * A safe form of location.href\n */\nexport function getLocationHref() {\n    try {\n        return document.location.href;\n    }\n    catch (oO) {\n        return '';\n    }\n}\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input) {\n    var match = input.match(SEMVER_REGEXP) || [];\n    var major = parseInt(match[1], 10);\n    var minor = parseInt(match[2], 10);\n    var patch = parseInt(match[3], 10);\n    return {\n        buildmetadata: match[5],\n        major: isNaN(major) ? undefined : major,\n        minor: isNaN(minor) ? undefined : minor,\n        patch: isNaN(patch) ? undefined : patch,\n        prerelease: match[4],\n    };\n}\nvar defaultRetryAfter = 60 * 1000; // 60 seconds\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now, header) {\n    if (!header) {\n        return defaultRetryAfter;\n    }\n    var headerDelay = parseInt(\"\" + header, 10);\n    if (!isNaN(headerDelay)) {\n        return headerDelay * 1000;\n    }\n    var headerDate = Date.parse(\"\" + header);\n    if (!isNaN(headerDate)) {\n        return headerDate - now;\n    }\n    return defaultRetryAfter;\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines, frame, linesOfContext) {\n    if (linesOfContext === void 0) { linesOfContext = 5; }\n    var lineno = frame.lineno || 0;\n    var maxLines = lines.length;\n    var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n    frame.pre_context = lines\n        .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n        .map(function (line) { return snipLine(line, 0); });\n    frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n    frame.post_context = lines\n        .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n        .map(function (line) { return snipLine(line, 0); });\n}\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath) {\n    // eslint-disable-next-line no-useless-escape\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n//# sourceMappingURL=misc.js.map"]},"metadata":{},"sourceType":"module"}